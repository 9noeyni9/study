
 . Synchronization (동기화)
 
    : 지금까지의 스레드는 각기 독립적으로 작동했습니다.
      이런 경우에 여러개의 스레드가 동시에 공유된 하나의 값에
      접근 한다면 문제가 생길 수 있습니다.
      
      예를 들어 ATM(은행자동기기)을 사용할 경우에 ATM을
      사용할 수 있는 카드를 여러장 발급할 수 있습니다.
      만약 세사람이 각자 같은 계좌를 이용할 수 있는 ATM 카드를 
      가지고 있다면 그 세사람이 동시에 서로 다른 ATM을 이용해
      입출금을 시도할 수 있습니다. 이러 경우에 발생하는 문제를 
      해결하는 방법을 제공합니다.
      
      여러개의 은행카드는 하나의 계좌에 입출금을 할 수 있습니다.
      이런 경우 동시에 공유된 값에 접근할 수 있는 스레드는 하나로
      제한할 필요가 있습니다. 이런 작업을 처리하기 위해 자바에서는 
      동기화 기법이 존제합니다. 즉 Synchronization은 한 시점에 
      하나의 스레드만 공유된 값을 변경 시킬 수 있습니다.
      
      이때 스레드에 의해 공유된 값을 임계영역(Critical Section)이라 하고
      임계영역 지정은 synchronized 키워드를 이용해 처리합니다.
      하나의 스레드가 임계영역으로 지정된 변수나 메소드를 호출할 때 
      다른 스레드가 그 값에 접근할 수 없도록 Lock(락)을 걸고
      사용이 끝나면 락을 해제합니다.
      
      스레드 작업이 동시에 이루어지지 못하게 막아준다.
      (한 스레드가 작동하는 동안 다른 스레드가 작동하지 못하게 막아준다.)
      
      .동기화 처리 방법
      
      1. 공유 데이터에 접근하는 메소드는 synchronized 키워드로 
         처리 합니다
         
         synchronized  메소드() {
         
         .....; //공유 데이터 접근
         
         }
         
      2. 공유 데이터에 접근되는 영역을 synchronized 키워드로 블록화
        처리합니다. 이때 공유 자원은 가지고 있는 클래스 객체를 사용합니다.
        
        synchronized(클래스객체) {
        
        ......; //처리할 블록
        
        }    